"use client"

export function CodingModelCards() {
  const models = [
    {
      name: "Claude 3.5 Sonnet (–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)",
      company: "Anthropic",
      releaseDate: "–ò—é–Ω—å 2025",
      description: "–õ–∏–¥–∏—Ä—É—é—â–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å Computer Use, Artifacts –∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–º reasoning",
      features: [
        "200K —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "88.0% –Ω–∞ HumanEval",
        "Computer Use –¥–ª—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞",
        "Artifacts - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è",
        "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π reasoning –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã"
      ],
      pricing: "$3/$15 –∑–∞ –º–ª–Ω —Ç–æ–∫–µ–Ω–æ–≤",
      color: "blue",
      badge: "üèÜ –õ–∏–¥–µ—Ä",
      rating: 9.7
    },
    {
      name: "GPT-4o",
      company: "OpenAI",
      releaseDate: "–ú–∞–π 2024",
      description: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å —Å –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–æ—Å—Ç—å—é –∏ –≥–ª—É–±–æ–∫–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
      features: [
        "128K —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "86.6% –Ω–∞ HumanEval",
        "–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π –≤–≤–æ–¥/–≤—ã–≤–æ–¥",
        "GitHub Copilot –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
        "–ë—ã—Å—Ç—Ä–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞"
      ],
      pricing: "$5/$15 –∑–∞ –º–ª–Ω —Ç–æ–∫–µ–Ω–æ–≤",
      color: "green",
      badge: "–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞",
      rating: 9.5
    },
    {
      name: "DeepSeek-Coder V2.5",
      company: "DeepSeek",
      releaseDate: "–°–µ–Ω—Ç—è–±—Ä—å 2025",
      description: "–õ—É—á—à–∞—è open source –º–æ–¥–µ–ª—å —Å –≤—ã—Å–æ–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è",
      features: [
        "16K/32K —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "87.5% –Ω–∞ HumanEval",
        "–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ",
        "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–¥ GPU",
        "–ü–æ–ª–Ω—ã–π –∫–æ–¥-completion"
      ],
      pricing: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ (Open Source)",
      color: "orange",
      badge: "üöÄ Open Source",
      rating: 9.4
    },
    {
      name: "Gemini 1.5 Pro",
      company: "Google",
      releaseDate: "–§–µ–≤—Ä–∞–ª—å 2024",
      description: "–ú–æ–¥–µ–ª—å —Å –æ–≥—Ä–æ–º–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –æ–∫–Ω–æ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ–ª—å—à–∏—Ö –∫–æ–¥–æ–≤—ã—Ö –±–∞–∑",
      features: [
        "1M —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "84.1% –Ω–∞ HumanEval",
        "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤",
        "–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "Google Cloud –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
      ],
      pricing: "$7/$21 –∑–∞ –º–ª–Ω —Ç–æ–∫–µ–Ω–æ–≤",
      color: "purple",
      badge: "–ú–µ–≥–∞-–∫–æ–Ω—Ç–µ–∫—Å—Ç",
      rating: 9.2
    },
    {
      name: "Codestral",
      company: "Mistral AI",
      releaseDate: "–ú–∞–π 2024",
      description: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ —Å –Ω–∏–∑–∫–æ–π –ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å—é",
      features: [
        "32K —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "81.1% –Ω–∞ HumanEval",
        "–£–ª—å—Ç—Ä–∞-–±—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫",
        "IDE –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
        "Streaming completion"
      ],
      pricing: "$1/$3 –∑–∞ –º–ª–Ω —Ç–æ–∫–µ–Ω–æ–≤",
      color: "red",
      badge: "‚ö° –°–∫–æ—Ä–æ—Å—Ç—å",
      rating: 9.0
    },
    {
      name: "Code Llama 70B",
      company: "Meta",
      releaseDate: "–ê–≤–≥—É—Å—Ç 2023",
      description: "–ú–æ—â–Ω–∞—è open source –º–æ–¥–µ–ª—å –¥–ª—è enterprise —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏",
      features: [
        "100K —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "82.0% –Ω–∞ HumanEval",
        "–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ",
        "Fine-tuning friendly",
        "Enterprise –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
      ],
      pricing: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ (Open Source)",
      color: "indigo",
      badge: "Enterprise",
      rating: 8.9
    },
    {
      name: "Qwen2.5-Coder 72B",
      company: "Alibaba",
      releaseDate: "–°–µ–Ω—Ç—è–±—Ä—å 2024",
      description: "–°–∏–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∞–∑–∏–∞—Ç—Å–∫–∏–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –º–æ–±–∏–ª—å–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É",
      features: [
        "32K —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "85.2% –Ω–∞ HumanEval",
        "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–µ–¥–∫–∏—Ö —è–∑—ã–∫–æ–≤",
        "–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
        "–ö—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç—å"
      ],
      pricing: "$2/$6 –∑–∞ –º–ª–Ω —Ç–æ–∫–µ–Ω–æ–≤",
      color: "pink",
      badge: "üåè –ì–ª–æ–±–∞–ª—å–Ω–∞—è",
      rating: 8.8
    },
    {
      name: "Grok-2",
      company: "xAI",
      releaseDate: "–ê–≤–≥—É—Å—Ç 2024",
      description: "–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Ç—Ä–µ–Ω–¥–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
      features: [
        "131K —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "79.8% –Ω–∞ HumanEval",
        "–†–µ–∞–ª-—Ç–∞–π–º –¥–∞–Ω–Ω—ã–µ –∏–∑ X",
        "–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
        "–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã"
      ],
      pricing: "$5/$15 –∑–∞ –º–ª–Ω —Ç–æ–∫–µ–Ω–æ–≤",
      color: "cyan",
      badge: "üîÆ –ò–Ω–Ω–æ–≤–∞—Ü–∏–∏",
      rating: 8.6
    }
  ]

  const getColorClasses = (color: string) => {
    const colors = {
      blue: "border-blue-200 bg-blue-50",
      green: "border-green-200 bg-green-50",
      purple: "border-purple-200 bg-purple-50",
      orange: "border-orange-200 bg-orange-50",
      red: "border-red-200 bg-red-50",
      indigo: "border-indigo-200 bg-indigo-50",
      pink: "border-pink-200 bg-pink-50",
      cyan: "border-cyan-200 bg-cyan-50"
    }
    return colors[color as keyof typeof colors] || colors.blue
  }

  const getBadgeClasses = (color: string) => {
    const colors = {
      blue: "bg-blue-600 text-white",
      green: "bg-green-600 text-white",
      purple: "bg-purple-600 text-white",
      orange: "bg-orange-600 text-white",
      red: "bg-red-600 text-white",
      indigo: "bg-indigo-600 text-white",
      pink: "bg-pink-600 text-white",
      cyan: "bg-cyan-600 text-white"
    }
    return colors[color as keyof typeof colors] || colors.blue
  }

  return (
    <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
      {models.map((model, index) => (
        <div
          key={index}
          className={`border-2 rounded-lg p-6 ${getColorClasses(model.color)} hover:shadow-lg transition-shadow`}
        >
          <div className="flex justify-between items-start mb-3">
            <h3 className="text-xl font-bold">{model.name}</h3>
            <span className={`px-2 py-1 rounded text-xs font-semibold ${getBadgeClasses(model.color)}`}>
              {model.badge}
            </span>
          </div>

          <p className="text-sm text-gray-600 mb-1">{model.company}</p>
          <p className="text-sm text-gray-600 mb-2">{model.releaseDate}</p>
          <p className="text-gray-700 mb-4">{model.description}</p>

          <div className="mb-4">
            <h4 className="font-semibold mb-2">–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h4>
            <ul className="text-sm space-y-1">
              {model.features.map((feature, idx) => (
                <li key={idx} className="flex items-start">
                  <span className="text-green-500 mr-2">‚úì</span>
                  {feature}
                </li>
              ))}
            </ul>
          </div>

          <div className="border-t pt-3">
            <div className="flex justify-between items-center">
              <p className="text-sm font-semibold text-gray-800">
                –¶–µ–Ω–∞: {model.pricing}
              </p>
              <div className="flex items-center">
                <span className="text-sm text-gray-600 mr-1">–†–µ–π—Ç–∏–Ω–≥:</span>
                <span className="text-sm font-bold text-yellow-600">{model.rating}/10</span>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  )
}