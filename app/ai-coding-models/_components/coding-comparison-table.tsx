"use client"

export function CodingComparisonTable() {
  const models = [
    {
      name: "Claude 3.5 Sonnet (–Ω–æ–≤–∞—è)",
      company: "Anthropic",
      context: "200K —Ç–æ–∫–µ–Ω–æ–≤",
      humanEval: "88.0%",
      mbpp: "82.5%",
      sweBench: "49.0%",
      languages: "100+",
      price: "$3/$15 –∑–∞ –º–ª–Ω",
      codeQuality: "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ",
      speed: "–ë—ã—Å—Ç—Ä–∞—è",
      textToCode: "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ",
      useCase: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, Computer Use, AI-–∞–≥–µ–Ω—Ç—ã",
      released: "–ò—é–Ω—å 2025",
      specialFeatures: "Computer Use, Artifacts"
    },
    {
      name: "GPT-4o",
      company: "OpenAI", 
      context: "128K —Ç–æ–∫–µ–Ω–æ–≤",
      humanEval: "86.6%",
      mbpp: "80.2%",
      sweBench: "43.8%",
      languages: "100+",
      price: "$5/$15 –∑–∞ –º–ª–Ω",
      codeQuality: "–û—Ç–ª–∏—á–Ω–æ–µ",
      speed: "–ë—ã—Å—Ç—Ä–∞—è",
      textToCode: "–û—Ç–ª–∏—á–Ω–æ–µ", 
      useCase: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      released: "–ú–∞–π 2024",
      specialFeatures: "–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–æ—Å—Ç—å, GitHub Copilot"
    },
    {
      name: "DeepSeek-Coder V2.5",
      company: "DeepSeek",
      context: "16K/32K —Ç–æ–∫–µ–Ω–æ–≤",
      humanEval: "87.5%",
      mbpp: "84.1%",
      sweBench: "45.2%",
      languages: "100+",
      price: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
      codeQuality: "–û—Ç–ª–∏—á–Ω–æ–µ",
      speed: "–ë—ã—Å—Ç—Ä–∞—è",
      textToCode: "–û—Ç–ª–∏—á–Ω–æ–µ",
      useCase: "–õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞, open source",
      released: "–°–µ–Ω—Ç—è–±—Ä—å 2025",
      specialFeatures: "Open source, –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
    },
    {
      name: "Gemini 1.5 Pro",
      company: "Google",
      context: "1M —Ç–æ–∫–µ–Ω–æ–≤",
      humanEval: "84.1%",
      mbpp: "78.9%",
      sweBench: "41.7%",
      languages: "100+",
      price: "$7/$21 –∑–∞ –º–ª–Ω",
      codeQuality: "–û—Ç–ª–∏—á–Ω–æ–µ",
      speed: "–°—Ä–µ–¥–Ω—è—è",
      textToCode: "–û—Ç–ª–∏—á–Ω–æ–µ",
      useCase: "–ë–æ–ª—å—à–∏–µ –ø—Ä–æ–µ–∫—Ç—ã, enterprise",
      released: "–§–µ–≤—Ä–∞–ª—å 2024",
      specialFeatures: "–û–≥—Ä–æ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, Google Cloud"
    },
    {
      name: "Codestral",
      company: "Mistral AI",
      context: "32K —Ç–æ–∫–µ–Ω–æ–≤", 
      humanEval: "81.1%",
      mbpp: "76.2%",
      sweBench: "38.5%",
      languages: "80+",
      price: "$1/$3 –∑–∞ –º–ª–Ω",
      codeQuality: "–•–æ—Ä–æ—à–µ–µ",
      speed: "–û—á–µ–Ω—å –±—ã—Å—Ç—Ä–∞—è",
      textToCode: "–•–æ—Ä–æ—à–µ–µ",
      useCase: "–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è, IDE –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      released: "–ú–∞–π 2024",
      specialFeatures: "–ù–∏–∑–∫–∞—è –ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å, streaming"
    },
    {
      name: "Code Llama 70B",
      company: "Meta",
      context: "100K —Ç–æ–∫–µ–Ω–æ–≤",
      humanEval: "82.0%",
      mbpp: "73.8%",
      sweBench: "35.1%",
      languages: "80+",
      price: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
      codeQuality: "–•–æ—Ä–æ—à–µ–µ",
      speed: "–°—Ä–µ–¥–Ω—è—è",
      textToCode: "–•–æ—Ä–æ—à–µ–µ",
      useCase: "Enterprise, –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è",
      released: "–ê–≤–≥—É—Å—Ç 2023",
      specialFeatures: "Open source, fine-tuning"
    },
    {
      name: "Qwen2.5-Coder 72B",
      company: "Alibaba",
      context: "32K —Ç–æ–∫–µ–Ω–æ–≤",
      humanEval: "85.2%", 
      mbpp: "79.1%",
      sweBench: "40.3%",
      languages: "120+",
      price: "$2/$6 –∑–∞ –º–ª–Ω",
      codeQuality: "–•–æ—Ä–æ—à–µ–µ",
      speed: "–ë—ã—Å—Ç—Ä–∞—è",
      textToCode: "–•–æ—Ä–æ—à–µ–µ",
      useCase: "–ê–∑–∏–∞—Ç—Å–∫–∏–µ —è–∑—ã–∫–∏, –º–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      released: "–°–µ–Ω—Ç—è–±—Ä—å 2024",
      specialFeatures: "–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å, –º–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
    },
    {
      name: "Grok-2",
      company: "xAI",
      context: "131K —Ç–æ–∫–µ–Ω–æ–≤",
      humanEval: "79.8%",
      mbpp: "71.4%",
      sweBench: "33.8%",
      languages: "80+",
      price: "$5/$15 –∑–∞ –º–ª–Ω",
      codeQuality: "–•–æ—Ä–æ—à–µ–µ",
      speed: "–°—Ä–µ–¥–Ω—è—è",
      textToCode: "–•–æ—Ä–æ—à–µ–µ",
      useCase: "–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏, –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤",
      released: "–ê–≤–≥—É—Å—Ç 2024",
      specialFeatures: "–†–µ–∞–ª-—Ç–∞–π–º –¥–∞–Ω–Ω—ã–µ –∏–∑ X"
    }
  ]

  return (
    <div className="overflow-x-auto">
      <table className="w-full border-collapse border border-gray-300 bg-white rounded-lg shadow">
        <thead>
          <tr className="bg-gray-100">
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–ú–æ–¥–µ–ª—å</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–ö–æ–º–ø–∞–Ω–∏—è</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–ö–æ–Ω—Ç–µ–∫—Å—Ç</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">HumanEval</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">MBPP</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">SWE-bench</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–Ø–∑—ã–∫–∏</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–¶–µ–Ω–∞ (in/out)</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–°–∫–æ—Ä–æ—Å—Ç—å</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–õ—É—á—à–µ –≤—Å–µ–≥–æ –¥–ª—è</th>
            <th className="border border-gray-300 px-4 py-3 text-left font-semibold">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</th>
          </tr>
        </thead>
        <tbody>
          {models.map((model, index) => (
            <tr key={index} className={index % 2 === 0 ? "bg-gray-50" : "bg-white"}>
              <td className="border border-gray-300 px-4 py-3 font-semibold">{model.name}</td>
              <td className="border border-gray-300 px-4 py-3">{model.company}</td>
              <td className="border border-gray-300 px-4 py-3">{model.context}</td>
              <td className="border border-gray-300 px-4 py-3 font-semibold text-green-600">{model.humanEval}</td>
              <td className="border border-gray-300 px-4 py-3 font-semibold text-blue-600">{model.mbpp}</td>
              <td className="border border-gray-300 px-4 py-3 font-semibold text-purple-600">{model.sweBench}</td>
              <td className="border border-gray-300 px-4 py-3">{model.languages}</td>
              <td className="border border-gray-300 px-4 py-3 text-blue-600 font-semibold">{model.price}</td>
              <td className="border border-gray-300 px-4 py-3">
                <span className={`px-2 py-1 rounded text-sm font-semibold ${
                  model.codeQuality === "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ" ? "bg-emerald-100 text-emerald-800" :
                  model.codeQuality === "–û—Ç–ª–∏—á–Ω–æ–µ" ? "bg-green-100 text-green-800" :
                  model.codeQuality === "–•–æ—Ä–æ—à–µ–µ" ? "bg-blue-100 text-blue-800" :
                  "bg-yellow-100 text-yellow-800"
                }`}>
                  {model.codeQuality}
                </span>
              </td>
              <td className="border border-gray-300 px-4 py-3">
                <span className={`px-2 py-1 rounded text-sm font-semibold ${
                  model.speed === "–û—á–µ–Ω—å –±—ã—Å—Ç—Ä–∞—è" ? "bg-emerald-100 text-emerald-800" :
                  model.speed === "–ë—ã—Å—Ç—Ä–∞—è" ? "bg-green-100 text-green-800" :
                  model.speed === "–°—Ä–µ–¥–Ω—è—è" ? "bg-yellow-100 text-yellow-800" :
                  "bg-red-100 text-red-800"
                }`}>
                  {model.speed}
                </span>
              </td>
              <td className="border border-gray-300 px-4 py-3 text-sm">{model.useCase}</td>
              <td className="border border-gray-300 px-4 py-3 text-sm text-gray-600">{model.specialFeatures}</td>
            </tr>
          ))}
        </tbody>
      </table>

      <div className="mt-6 space-y-2 text-sm text-gray-600">
        <p><strong>HumanEval:</strong> –ë–µ–Ω—á–º–∞—Ä–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è (164 –∑–∞–¥–∞—á–∏)</p>
        <p><strong>MBPP:</strong> Mostly Basic Python Problems - –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è</p>
        <p><strong>SWE-bench:</strong> Software Engineering benchmark - —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</p>
        <p><strong>–¶–µ–Ω—ã:</strong> –£–∫–∞–∑–∞–Ω—ã –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê –∑–∞ –º–∏–ª–ª–∏–æ–Ω —Ç–æ–∫–µ–Ω–æ–≤ (input/output). –î–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ–Ω—Ç—è–±—Ä—å 2025.</p>
        <div className="mt-4 p-4 bg-blue-50 rounded-lg">
          <h4 className="font-semibold text-blue-900 mb-2">üí° –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</h4>
          <p className="text-blue-800">Claude 3.5 Sonnet –ª–∏–¥–∏—Ä—É–µ—Ç –ø–æ –∫–∞—á–µ—Å—Ç–≤—É reasoning –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π. DeepSeek-Coder V2.5 - –ª—É—á—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. GPT-4o –æ–ø—Ç–∏–º–∞–ª–µ–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á.</p>
        </div>
      </div>
    </div>
  )
}