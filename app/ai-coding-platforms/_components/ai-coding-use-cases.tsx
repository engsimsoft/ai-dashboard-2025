"use client"

export function AICodingUseCases() {
  const useCases = [
    {
      title: "–ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ",
      description: "–ù—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞—Ç—å MVP –∏–ª–∏ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
      icon: "‚ö°",
      color: "green",
      platforms: [
        { name: "Replit Agent", reason: "–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –Ω—É–ª—è –∑–∞ –º–∏–Ω—É—Ç—ã" },
        { name: "Bolt.new", reason: "–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π" },
        { name: "Lovable", reason: "No-code –ø–æ–¥—Ö–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" }
      ]
    },
    {
      title: "–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤",
      description: "–ù—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–¥–æ–≤—É—é –±–∞–∑—É",
      icon: "üîß",
      color: "blue",
      platforms: [
        { name: "Cursor", reason: "Composer –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞" },
        { name: "Windsurf", reason: "Cascade —Ä–µ–∂–∏–º –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π" },
        { name: "GitHub Copilot", reason: "–û—Ç–ª–∏—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏" }
      ]
    },
    {
      title: "–û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
      description: "–ò–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —è–∑—ã–∫–æ–≤ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
      icon: "üìö",
      color: "purple",
      platforms: [
        { name: "Replit Agent", reason: "–û–±—ä—è—Å–Ω—è–µ—Ç –∫–æ–¥ –∏ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏" },
        { name: "GitHub Copilot", reason: "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏" },
        { name: "Cursor", reason: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –∫–æ–¥–∞" }
      ]
    },
    {
      title: "–°–æ–∑–¥–∞–Ω–∏–µ UI/UX",
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤",
      icon: "üé®",
      color: "pink",
      platforms: [
        { name: "v0 by Vercel", reason: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö" },
        { name: "Lovable", reason: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞" },
        { name: "Bolt.new", reason: "–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫" }
      ]
    },
    {
      title: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      description: "–†–∞–±–æ—Ç–∞ –≤ –±–æ–ª—å—à–∏—Ö –∫–æ–º–∞–Ω–¥–∞—Ö —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      icon: "üè¢",
      color: "indigo",
      platforms: [
        { name: "Amazon Q", reason: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ AWS –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è" },
        { name: "GitHub Copilot", reason: "–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å enterprise —Ñ—É–Ω–∫—Ü–∏—è–º–∏" },
        { name: "Replit", reason: "–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π" }
      ]
    },
    {
      title: "–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      description: "–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      icon: "üì±",
      color: "orange",
      platforms: [
        { name: "Replit Agent", reason: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ React Native –∏ Flutter" },
        { name: "Cursor", reason: "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞–º–∏" },
        { name: "GitHub Copilot", reason: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π" }
      ]
    },
    {
      title: "DevOps –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
      description: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ CI/CD –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
      icon: "‚öôÔ∏è",
      color: "gray",
      platforms: [
        { name: "Amazon Q", reason: "–ì–ª—É–±–æ–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AWS —Å–µ—Ä–≤–∏—Å–∞–º–∏" },
        { name: "Replit Agent", reason: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –∏ —Ö–æ—Å—Ç–∏–Ω–≥" },
        { name: "GitHub Copilot", reason: "–ü–æ–º–æ—â—å —Å Docker, Kubernetes, YAML" }
      ]
    },
    {
      title: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã",
      description: "Data Science, ML, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã",
      icon: "üî¨",
      color: "yellow",
      platforms: [
        { name: "Replit Agent", reason: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Python, Jupyter notebooks" },
        { name: "Cursor", reason: "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –Ω–∞—É—á–Ω—ã–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏" },
        { name: "GitHub Copilot", reason: "–ó–Ω–∞–Ω–∏–µ ML/AI –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤" }
      ]
    }
  ]

  const getColorClasses = (color: string) => {
    const colors = {
      green: "border-green-200 bg-green-50",
      blue: "border-blue-200 bg-blue-50",
      purple: "border-purple-200 bg-purple-50",
      pink: "border-pink-200 bg-pink-50",
      indigo: "border-indigo-200 bg-indigo-50",
      orange: "border-orange-200 bg-orange-50",
      gray: "border-gray-200 bg-gray-50",
      yellow: "border-yellow-200 bg-yellow-50"
    }
    return colors[color as keyof typeof colors] || colors.blue
  }

  const getIconBgColor = (color: string) => {
    const colors = {
      green: "bg-green-100",
      blue: "bg-blue-100",
      purple: "bg-purple-100",
      pink: "bg-pink-100",
      indigo: "bg-indigo-100",
      orange: "bg-orange-100",
      gray: "bg-gray-100",
      yellow: "bg-yellow-100"
    }
    return colors[color as keyof typeof colors] || colors.blue
  }

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      {useCases.map((useCase, index) => (
        <div 
          key={index}
          className={`border-2 rounded-lg p-6 hover:shadow-lg transition-all duration-300 ${getColorClasses(useCase.color)}`}
        >
          <div className="flex items-center mb-4">
            <div className={`w-12 h-12 rounded-full ${getIconBgColor(useCase.color)} flex items-center justify-center text-2xl mr-4`}>
              {useCase.icon}
            </div>
            <h3 className="text-xl font-bold">{useCase.title}</h3>
          </div>
          
          <p className="text-gray-700 mb-4 text-sm">{useCase.description}</p>
          
          <div className="space-y-3">
            <h4 className="font-semibold text-sm">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:</h4>
            {useCase.platforms.map((platform, idx) => (
              <div key={idx} className="bg-white p-3 rounded border">
                <div className="font-semibold text-sm text-blue-600">{platform.name}</div>
                <div className="text-xs text-gray-600 mt-1">{platform.reason}</div>
              </div>
            ))}
          </div>
        </div>
      ))}
    </div>
  )
} 