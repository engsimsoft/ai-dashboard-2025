"use server"

import { ActionState, NewsItem, MarketData } from "@/types"

// –ú–∞–ø–ø–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–∞
const categoryMapping: Record<string, string> = {
  "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò": "technology",
  "–ú–æ–¥–µ–ª–∏": "technology", 
  "Vibecoding": "technology",
  "LLM": "research",
  "all": "all"
}

export async function getAINewsAction(
  category: string = 'all',
  limit: number = 6
): Promise<ActionState<NewsItem[]>> {
  console.log(`üîç getAINewsAction called with category: ${category}, limit: ${limit}`)
  
  try {
    const mcpCategory = categoryMapping[category] || "all"
    console.log(`üìä Mapped category: ${category} -> ${mcpCategory}`)
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º MCP —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é
    const { mcp_ai_news_get_ai_news } = await import('@/lib/mcp-client')
    console.log(`üîå MCP client imported successfully`)
    
    const newsData = await mcp_ai_news_get_ai_news({
      category: mcpCategory,
      limit: limit
    })
    console.log(`‚úÖ MCP returned ${newsData?.length || 0} news items:`, newsData)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ MCP –≤–µ—Ä–Ω—É–ª –≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (!newsData || !Array.isArray(newsData) || newsData.length === 0) {
      throw new Error('MCP returned empty or invalid data')
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    const formattedNews: NewsItem[] = newsData.map((item: any) => ({
      title: item.title || "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞",
      description: item.description || item.summary || "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ",
      url: item.url || item.link || "#",
      publishedAt: item.publishedAt || item.published_at || new Date().toISOString(),
      source: item.source || "AI News",
      category: category === 'all' ? "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò" : category
    }))
    console.log(`üéØ Formatted ${formattedNews.length} news items`)

    return {
      isSuccess: true,
      message: "–ù–æ–≤–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ MCP —Å–µ—Ä–≤–µ—Ä–∞",
      data: formattedNews
    }
  } catch (error) {
    console.error("‚ùå MCP failed, using fallback:", error)
    
    // Fallback –∫ —Å—Ç–∞—Ç–∏—á–Ω—ã–º –¥–∞–Ω–Ω—ã–º –ø—Ä–∏ –æ—à–∏–±–∫–µ MCP
    const fallbackNews = getFallbackNews(category, limit)
    console.log(`üîÑ Using fallback data: ${fallbackNews.length} items for category "${category}"`)
    
    return {
      isSuccess: true,
      message: "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ (MCP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)",
      data: fallbackNews
    }
  }
}

export async function getAIMarketDataAction(): Promise<ActionState<MarketData>> {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä—ã–Ω–∫–µ –ò–ò –∏–∑ MCP —Å–µ—Ä–≤–µ—Ä–∞
    const { mcp_ai_news_get_ai_market_data } = await import('@/lib/mcp-client')
    const marketData = await mcp_ai_news_get_ai_market_data({
      timeframe: "month"
    })
    
    const formattedData: MarketData = {
      marketSize: marketData.marketSize?.current || 180.5,
      growth: marketData.marketSize?.growth || 37.3,
      timeframe: marketData.timeframe || "month",
      lastUpdated: marketData.timestamp || new Date().toISOString()
    }

    return {
      isSuccess: true,
      message: "–î–∞–Ω–Ω—ã–µ —Ä—ã–Ω–∫–∞ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ MCP —Å–µ—Ä–≤–µ—Ä–∞",
      data: formattedData
    }
  } catch (error) {
    console.error("Error fetching market data from MCP:", error)
    
    // Fallback –¥–∞–Ω–Ω—ã–µ
    return {
      isSuccess: true,
      message: "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä—ã–Ω–∫–∞",
      data: {
        marketSize: 180.5,
        growth: 37.3,
        timeframe: "month",
        lastUpdated: new Date().toISOString()
      }
    }
  }
}

export async function searchAINewsAction(
  query: string,
  limit: number = 5
): Promise<ActionState<NewsItem[]>> {
  try {
    // –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ MCP —Å–µ—Ä–≤–µ—Ä
    const { mcp_ai_news_search_ai_news } = await import('@/lib/mcp-client')
    const searchData = await mcp_ai_news_search_ai_news({
      query: query,
      limit: limit
    })
    
    const formattedNews: NewsItem[] = searchData.map((item: any) => ({
      title: item.title || "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞",
      description: item.description || item.summary || "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ",
      url: item.url || item.link || "#",
      publishedAt: item.publishedAt || item.published_at || new Date().toISOString(),
      source: item.source || "AI News",
      category: "–ü–æ–∏—Å–∫"
    }))

    return {
      isSuccess: true,
      message: `–ù–∞–π–¥–µ–Ω–æ ${formattedNews.length} –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∑–∞–ø—Ä–æ—Å—É "${query}"`,
      data: formattedNews
    }
  } catch (error) {
    console.error("Error searching AI news:", error)
    
    return {
      isSuccess: false,
      message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π",
      data: []
    }
  }
}

// Fallback —Ñ—É–Ω–∫—Ü–∏—è —Å–æ —Å—Ç–∞—Ç–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
function getFallbackNews(category: string, limit: number): NewsItem[] {
  const fallbackData: Record<string, NewsItem[]> = {
    "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò": [
      {
        title: "OpenAI –≤—ã–ø—É—Å—Ç–∏–ª–∞ GPT-4 Turbo —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏",
        description: "–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è GPT-4 Turbo –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Å–Ω–∏–∂–µ–Ω–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.",
        url: "https://openai.com/blog/gpt-4-turbo",
        publishedAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
        source: "OpenAI Blog",
        category: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò"
      },
      {
        title: "Google DeepMind –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª Gemini 2.0 Flash —Å –∞–≥–µ–Ω—Ç–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏",
        description: "–ù–æ–≤–∞—è –º–æ–¥–µ–ª—å Gemini 2.0 Flash –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±—Ä–∞—É–∑–µ—Ä–æ–º, –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞—É–¥–∏–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.",
        url: "https://deepmind.google/gemini-2/",
        publishedAt: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
        source: "Google DeepMind",
        category: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò"
      },
      {
        title: "DeepSeek –≤—ã–ø—É—Å—Ç–∏–ª R1 - –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ OpenAI o1 —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º",
        description: "–ö–∏—Ç–∞–π—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è DeepSeek –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –º–æ–¥–µ–ª—å R1, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–ø–æ—Å—Ç–∞–≤–∏–º—É—é —Å OpenAI o1 –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –∑–∞–¥–∞—á–∞—Ö —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–∞–∫ open source.",
        url: "https://github.com/deepseek-ai/DeepSeek-R1",
        publishedAt: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),
        source: "DeepSeek AI",
        category: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò"
      },
      {
        title: "Claude 3.5 Sonnet –æ–±–Ω–æ–≤–ª–µ–Ω —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
        description: "Anthropic –≤—ã–ø—É—Å—Ç–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é Claude 3.5 Sonnet —Å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ —Ä–∞–±–æ—Ç–µ —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏.",
        url: "https://www.anthropic.com/news/3-5-sonnet-improved",
        publishedAt: new Date(Date.now() - 8 * 60 * 60 * 1000).toISOString(),
        source: "Anthropic",
        category: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò"
      },
      {
        title: "Google –∑–∞–ø—É—Å—Ç–∏–ª –ø—Ä–æ–µ–∫—Ç Astra - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç",
        description: "–ü—Ä–æ–µ–∫—Ç Astra –æ—Ç Google DeepMind –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–æ–≥–æ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞, —Å–ø–æ—Å–æ–±–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞—Ç—å –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º –º–∏—Ä–æ–º —á–µ—Ä–µ–∑ –∫–∞–º–µ—Ä—É.",
        url: "https://deepmind.google/astra/",
        publishedAt: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),
        source: "Google DeepMind",
        category: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò"
      },
      {
        title: "Meta –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ Llama 3.3 70B - –∫–æ–º–ø–∞–∫—Ç–Ω—É—é –º–æ–¥–µ–ª—å –≤—ã—Å–æ–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
        description: "Meta –≤—ã–ø—É—Å—Ç–∏–ª–∞ Llama 3.3 70B, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–ø–æ—Å—Ç–∞–≤–∏–º—É—é —Å Llama 3.1 405B –ø—Ä–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –º–µ–Ω—å—à–µ–º —Ä–∞–∑–º–µ—Ä–µ.",
        url: "https://llama.meta.com/docs/model-cards-and-prompt-formats/llama3_3",
        publishedAt: new Date(Date.now() - 16 * 60 * 60 * 1000).toISOString(),
        source: "Meta AI",
        category: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò"
      }
    ],
    "–ú–æ–¥–µ–ª–∏": [
      {
        title: "OpenAI o1 –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ –Ω–∞—É–∫–µ",
        description: "–ù–æ–≤–∞—è –º–æ–¥–µ–ª—å o1 –æ—Ç OpenAI –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –≤ –∑–∞–¥–∞—á–∞—Ö, —Ç—Ä–µ–±—É—é—â–∏—Ö –≥–ª—É–±–æ–∫–æ–≥–æ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫—É, —Ñ–∏–∑–∏–∫—É –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ.",
        url: "https://openai.com/o1/",
        publishedAt: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),
        source: "OpenAI",
        category: "–ú–æ–¥–µ–ª–∏"
      },
      {
        title: "Anthropic –≤—ã–ø—É—Å—Ç–∏–ª Claude 3.5 Haiku - –±—ã—Å—Ç—Ä—É—é –∏ –¥–æ—Å—Ç—É–ø–Ω—É—é –º–æ–¥–µ–ª—å",
        description: "Claude 3.5 Haiku –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–ª—è –∑–∞–¥–∞—á —Å –±–æ–ª—å—à–∏–º–∏ –æ–±—ä–µ–º–∞–º–∏ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–æ–¥–∞.",
        url: "https://www.anthropic.com/news/claude-3-5-haiku",
        publishedAt: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),
        source: "Anthropic",
        category: "–ú–æ–¥–µ–ª–∏"
      },
      {
        title: "xAI –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ Grok-2 —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è",
        description: "–ù–æ–≤–∞—è –º–æ–¥–µ–ª—å Grok-2 –æ—Ç xAI –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –±–µ–Ω—á–º–∞—Ä–∫–∞—Ö –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π X –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
        url: "https://x.ai/blog/grok-2",
        publishedAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
        source: "xAI",
        category: "–ú–æ–¥–µ–ª–∏"
      },
      {
        title: "Mistral AI –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–ª–∞ Mistral Large 2 —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 128K –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        description: "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è Mistral AI –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ —Ä–∞–±–æ—Ç—ã —Å –∫–æ–¥–æ–º –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –æ–∫–Ω–æ–º.",
        url: "https://mistral.ai/news/mistral-large-2407/",
        publishedAt: new Date(Date.now() - 7 * 60 * 60 * 1000).toISOString(),
        source: "Mistral AI",
        category: "–ú–æ–¥–µ–ª–∏"
      },
      {
        title: "Cohere –≤—ã–ø—É—Å—Ç–∏–ª Command R+ –¥–ª—è enterprise-–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π",
        description: "Command R+ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ RAG-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É 23 —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
        url: "https://cohere.com/blog/command-r-plus-microsoft-azure",
        publishedAt: new Date(Date.now() - 10 * 60 * 60 * 1000).toISOString(),
        source: "Cohere",
        category: "–ú–æ–¥–µ–ª–∏"
      },
      {
        title: "Alibaba –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ Qwen2.5 —Å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –≤–µ—Å–∞–º–∏",
        description: "–ù–æ–≤–∞—è —Å–µ—Ä–∏—è –º–æ–¥–µ–ª–µ–π Qwen2.5 –æ—Ç Alibaba Cloud –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–∞—Ö –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—Å–æ–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –º–Ω–æ–≥–æ—è–∑—ã—á–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö.",
        url: "https://qwenlm.github.io/blog/qwen2.5/",
        publishedAt: new Date(Date.now() - 14 * 60 * 60 * 1000).toISOString(),
        source: "Alibaba Cloud",
        category: "–ú–æ–¥–µ–ª–∏"
      }
    ],
    "Vibecoding": [
      {
        title: "Cursor AI –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª Composer - —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è",
        description: "–ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è Composer –≤ Cursor –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å –ø–æ–º–æ—â—å—é –ò–ò, –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –º–µ–Ω—è—è –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        url: "https://www.cursor.com/blog/composer",
        publishedAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
        source: "Cursor",
        category: "Vibecoding"
      },
      {
        title: "GitHub Copilot –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–ª Claude 3.5 Sonnet –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è",
        description: "GitHub –æ–±—ä—è–≤–∏–ª –æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–µ —Å Anthropic –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Claude 3.5 Sonnet –≤ Copilot, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –≤—ã–±–æ—Ä –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ò–ò-–º–æ–¥–µ–ª—è–º–∏.",
        url: "https://github.blog/news-insights/product-news/github-copilot-in-vscode-free/",
        publishedAt: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
        source: "GitHub",
        category: "Vibecoding"
      },
      {
        title: "Vercel v0 —Ç–µ–ø–µ—Ä—å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –ø—Ä–æ—Å—Ç–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è",
        description: "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è v0 –æ—Ç Vercel —Å–ø–æ—Å–æ–±–Ω–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è.",
        url: "https://v0.dev/chat",
        publishedAt: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),
        source: "Vercel",
        category: "Vibecoding"
      },
      {
        title: "Replit Agent –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
        description: "–ù–æ–≤—ã–π –ò–ò-–∞–≥–µ–Ω—Ç –æ—Ç Replit –º–æ–∂–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å, –∫–æ–¥–∏—Ç—å, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –¥–µ–ø–ª–æ–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ç—Ä–µ–±—É—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —É—á–∞—Å—Ç–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.",
        url: "https://blog.replit.com/agent",
        publishedAt: new Date(Date.now() - 8 * 60 * 60 * 1000).toISOString(),
        source: "Replit",
        category: "Vibecoding"
      },
      {
        title: "Windsurf Editor –æ—Ç Codeium –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≥–ª—É–±–æ–∫—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –ò–ò",
        description: "–ù–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä Windsurf –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ—Å—à–æ–≤–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –ò–ò –≤ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ Cascade –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.",
        url: "https://codeium.com/windsurf",
        publishedAt: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),
        source: "Codeium",
        category: "Vibecoding"
      },
      {
        title: "Anthropic –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª Model Context Protocol (MCP) –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",
        description: "–ù–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª MCP –ø–æ–∑–≤–æ–ª—è–µ—Ç –ò–ò-–º–æ–¥–µ–ª—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.",
        url: "https://www.anthropic.com/news/model-context-protocol",
        publishedAt: new Date(Date.now() - 18 * 60 * 60 * 1000).toISOString(),
        source: "Anthropic",
        category: "Vibecoding"
      }
    ],
    "LLM": [
      {
        title: "MIT –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è LLM",
        description: "–£—á–µ–Ω—ã–µ –∏–∑ MIT –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –æ–±—É—á–µ–Ω–∏—é –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–π —Å–Ω–∏–∂–∞–µ—Ç –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –±–µ–∑ —É—â–µ—Ä–±–∞ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞.",
        url: "https://news.mit.edu/2024/efficient-llm-training-breakthrough",
        publishedAt: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),
        source: "MIT News",
        category: "LLM"
      },
      {
        title: "Stanford –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –ò–ò",
        description: "–ù–æ–≤–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ Stanford HAI –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ LLM –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç —ç–º–µ—Ä–¥–∂–µ–Ω—Ç–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–º—É –º—ã—à–ª–µ–Ω–∏—é –∏ —Ä–µ—à–µ–Ω–∏—é —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á.",
        url: "https://hai.stanford.edu/news/reasoning-capabilities-llms",
        publishedAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
        source: "Stanford HAI",
        category: "LLM"
      },
      {
        title: "–ü—Ä–æ—Ä—ã–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –º–Ω–æ–≥–æ–º–æ–¥–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π: –ò–ò —É—á–∏—Ç—Å—è –ø–æ–Ω–∏–º–∞—Ç—å –º–∏—Ä",
        description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π, —Å–ø–æ—Å–æ–±–Ω—ã—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ —Å –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.",
        url: "https://arxiv.org/abs/2024.12345",
        publishedAt: new Date(Date.now() - 7 * 60 * 60 * 1000).toISOString(),
        source: "arXiv",
        category: "LLM"
      },
      {
        title: "–ù–æ–≤–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã –≤–Ω–∏–º–∞–Ω–∏—è –≤ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–∞—Ö",
        description: "–£—á–µ–Ω—ã–µ –∏–∑ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ö–∞—Ä–Ω–µ–≥–∏-–ú–µ–ª–ª–æ–Ω –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª–∏ —Ä–∞–±–æ—Ç—É, –æ–±—ä—è—Å–Ω—è—é—â—É—é –º–µ—Ö–∞–Ω–∏–∑–º—ã –≤–Ω–∏–º–∞–Ω–∏—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª—è—Ö –∏ –ø—É—Ç–∏ –∏—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.",
        url: "https://www.cs.cmu.edu/news/transformer-attention-research",
        publishedAt: new Date(Date.now() - 9 * 60 * 60 * 1000).toISOString(),
        source: "Carnegie Mellon University",
        category: "LLM"
      },
      {
        title: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ò–ò –≤ –Ω–∞—É—á–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏—è—Ö",
        description: "–ö–æ–º–∞–Ω–¥–∞ –∏–∑ DeepMind –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞, –∫–∞–∫ LLM –º–æ–≥—É—Ç —É—Å–∫–æ—Ä–∏—Ç—å –Ω–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤–µ–¥–µ–Ω–∏—è –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤.",
        url: "https://deepmind.google/discover/blog/ai-scientific-discovery/",
        publishedAt: new Date(Date.now() - 11 * 60 * 60 * 1000).toISOString(),
        source: "DeepMind",
        category: "LLM"
      },
      {
        title: "Breakthrough –≤ –æ–±–ª–∞—Å—Ç–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ò–ò: –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π",
        description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–æ–≥–æ –ò–ò –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∏ –Ω–∞–¥–µ–∂–Ω—ã—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π.",
        url: "https://www.anthropic.com/research/constitutional-ai",
        publishedAt: new Date(Date.now() - 15 * 60 * 60 * 1000).toISOString(),
        source: "Anthropic Research",
        category: "LLM"
      }
    ]
  }

  const categoryNews = fallbackData[category] || fallbackData["–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–ò"]
  return categoryNews.slice(0, limit)
} 