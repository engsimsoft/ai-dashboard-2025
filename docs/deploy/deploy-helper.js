#!/usr/bin/env node

/**
 * Deploy Helper Script
 * –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–µ–ø–ª–æ—è Next.js –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–∞ Vercel
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

class DeployHelper {
  constructor() {
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ (–≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è package.json)
    this.projectRoot = this.findProjectRoot();
    console.log(`üìÅ –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: ${this.projectRoot}`);
  }

  // –ü–æ–∏—Å–∫ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
  findProjectRoot() {
    let currentDir = process.cwd();
    
    // –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏–∑ docs/deploy, –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ 2 —É—Ä–æ–≤–Ω—è –≤–≤–µ—Ä—Ö
    if (currentDir.endsWith('docs/deploy') || currentDir.endsWith('docs\\deploy')) {
      return path.resolve(currentDir, '../..');
    }
    
    // –ò—â–µ–º package.json –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ –∏ –≤—ã—à–µ
    while (currentDir !== path.dirname(currentDir)) {
      if (fs.existsSync(path.join(currentDir, 'package.json'))) {
        return currentDir;
      }
      currentDir = path.dirname(currentDir);
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É
    return process.cwd();
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ package.json
  fixPackageJson() {
    const packagePath = path.join(this.projectRoot, 'package.json');
    if (!fs.existsSync(packagePath)) {
      console.log('‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return false;
    }

    const pkg = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
    const requiredScripts = {
      dev: 'next dev',
      build: 'next build',
      start: 'next start',
      lint: 'next lint'
    };

    let changed = false;
    if (!pkg.scripts) pkg.scripts = {};

    Object.entries(requiredScripts).forEach(([key, value]) => {
      if (!pkg.scripts[key]) {
        pkg.scripts[key] = value;
        changed = true;
      }
    });

    if (changed) {
      fs.writeFileSync(packagePath, JSON.stringify(pkg, null, 2));
      console.log('‚úÖ package.json –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
    }

    return true;
  }

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Next.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  fixNextConfig() {
    const configPaths = [
      'next.config.js',
      'next.config.mjs',
      'next.config.ts'
    ];

    let configPath = null;
    for (const p of configPaths) {
      if (fs.existsSync(path.join(this.projectRoot, p))) {
        configPath = p;
        break;
      }
    }

    if (!configPath) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥
      const config = `/** @type {import('next').NextConfig} */
const nextConfig = {
  eslint: {
    ignoreDuringBuilds: true,
  },
  typescript: {
    ignoreBuildErrors: false, // –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ true –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  }
};

export default nextConfig;`;
      
      fs.writeFileSync(path.join(this.projectRoot, 'next.config.mjs'), config);
      console.log('‚úÖ next.config.mjs —Å–æ–∑–¥–∞–Ω');
      return;
    }

    // –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ñ–∏–≥
    let content = fs.readFileSync(path.join(this.projectRoot, configPath), 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ eslint.ignoreDuringBuilds
    if (!content.includes('ignoreDuringBuilds')) {
      console.log('‚ö†Ô∏è  –î–æ–±–∞–≤—å—Ç–µ –≤ next.config.js: eslint: { ignoreDuringBuilds: true }');
    } else {
      console.log('‚úÖ next.config.js —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
  }

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ESLint –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  fixESLintConfig() {
    const eslintPath = path.join(this.projectRoot, '.eslintrc.json');
    
    const defaultConfig = {
      extends: ["next/core-web-vitals", "next/typescript"],
      rules: {
        "react/no-unescaped-entities": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "@next/next/no-img-element": "off"
      }
    };

    if (!fs.existsSync(eslintPath)) {
      fs.writeFileSync(eslintPath, JSON.stringify(defaultConfig, null, 2));
      console.log('‚úÖ .eslintrc.json —Å–æ–∑–¥–∞–Ω');
    } else {
      const config = JSON.parse(fs.readFileSync(eslintPath, 'utf8'));
      if (!config.rules || !config.rules['react/no-unescaped-entities']) {
        config.rules = { ...config.rules, ...defaultConfig.rules };
        fs.writeFileSync(eslintPath, JSON.stringify(config, null, 2));
        console.log('‚úÖ .eslintrc.json –æ–±–Ω–æ–≤–ª–µ–Ω');
      } else {
        console.log('‚úÖ .eslintrc.json —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      }
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ .env.example
  createEnvExample() {
    const envPath = path.join(this.projectRoot, '.env.example');
    if (fs.existsSync(envPath)) {
      console.log('‚úÖ .env.example —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      return;
    }

    const envContent = `# Next.js
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Database (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
# DATABASE_URL=
# SUPABASE_URL=
# SUPABASE_ANON_KEY=

# Auth (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)  
# NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=
# CLERK_SECRET_KEY=

# Analytics (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# NEXT_PUBLIC_VERCEL_ANALYTICS_ID=`;

    fs.writeFileSync(envPath, envContent);
    console.log('‚úÖ .env.example —Å–æ–∑–¥–∞–Ω');
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore
  checkGitignore() {
    const gitignorePath = path.join(this.projectRoot, '.gitignore');
    if (!fs.existsSync(gitignorePath)) {
      console.log('‚ö†Ô∏è  .gitignore –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const content = fs.readFileSync(gitignorePath, 'utf8');
    const required = ['node_modules', '.env*.local', '.next', '.vercel'];
    
    const missing = required.filter(item => !content.includes(item));
    if (missing.length > 0) {
      console.log(`‚ö†Ô∏è  –î–æ–±–∞–≤—å—Ç–µ –≤ .gitignore: ${missing.join(', ')}`);
    } else {
      console.log('‚úÖ .gitignore –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    }
  }

  // Git –∫–æ–º–∞–Ω–¥—ã
  gitInit(repoUrl) {
    try {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è git –∫–æ–º–∞–Ω–¥
      process.chdir(this.projectRoot);
      
      execSync('git init', { stdio: 'inherit' });
      execSync('git add .', { stdio: 'inherit' });
      execSync('git commit -m "Initial commit: ready for deployment"', { stdio: 'inherit' });
      execSync('git branch -M main', { stdio: 'inherit' });
      
      if (repoUrl) {
        execSync(`git remote add origin ${repoUrl}`, { stdio: 'inherit' });
        execSync('git push -u origin main', { stdio: 'inherit' });
      }
      
      console.log('‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ Git:', error.message);
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–¥–µ–ø–ª–æ–π
  forceDeploy(message = 'Force redeploy') {
    try {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è git –∫–æ–º–∞–Ω–¥
      process.chdir(this.projectRoot);
      
      execSync(`git commit --allow-empty -m "${message}"`, { stdio: 'inherit' });
      execSync('git push', { stdio: 'inherit' });
      console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π –∑–∞–ø—É—â–µ–Ω');
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è:', error.message);
    }
  }

  // –ü–æ–ª–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é
  prepareForDeploy() {
    console.log('üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é...\n');
    
    this.fixPackageJson();
    this.fixNextConfig();
    this.fixESLintConfig();
    this.createEnvExample();
    this.checkGitignore();
    
    console.log('\n‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!');
    console.log('\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub');
    console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node docs/deploy/deploy-helper.js git <URL_–†–ï–ü–û–ó–ò–¢–û–†–ò–Ø>');
    console.log('3. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –Ω–∞ Vercel –∏–∑ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è');
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥
  run() {
    const args = process.argv.slice(2);
    const command = args[0];

    switch (command) {
      case 'prepare':
        this.prepareForDeploy();
        break;
      case 'git':
        this.gitInit(args[1]);
        break;
      case 'force':
        this.forceDeploy(args[1]);
        break;
      case 'fix':
        this.fixPackageJson();
        this.fixNextConfig();
        this.fixESLintConfig();
        console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞');
        break;
      default:
        console.log(`
üöÄ Deploy Helper –¥–ª—è Next.js + Vercel

–ö–æ–º–∞–Ω–¥—ã:
  prepare     - –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∫ –¥–µ–ø–ª–æ—é
  git <url>   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Git –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
  force [msg] - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–¥–µ–ø–ª–æ–π
  fix         - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é

–ü—Ä–∏–º–µ—Ä—ã:
  node docs/deploy/deploy-helper.js prepare
  node docs/deploy/deploy-helper.js git https://github.com/user/repo.git
  node docs/deploy/deploy-helper.js force "Fix deployment issues"
  node docs/deploy/deploy-helper.js fix

–ó–∞–ø—É—Å–∫ –∏–∑ –ª—é–±–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞!
        `);
    }
  }
}

// –ó–∞–ø—É—Å–∫
const helper = new DeployHelper();
helper.run(); 